1.Write a valid SQL statement that calculates the total weight of all corn cobs that were picked from the garden:
select sum(weight) from picked where plantfk=2;
+--------------------+
| sum(weight)        |
+--------------------+
| 17.539999961853027 |
+--------------------+
1 row in set (0.01 sec)

2.For some reason Erin has change his location for picking the tomato to North. Write the corresponding query.

update picked set locationfk=1 where plantfk=3 and gardenerfk=3;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

3.Insert a new column 'Exper' of type Number (30) to the 'gardener' table which stores Experience of the of person. How will you modify this to varchar2(30).

Alter table gardener add exper int(30);
Query OK, 4 rows affected (0.03 sec)
Records: 4  Duplicates: 0  Warnings: 0

Alter table gardener modify exper varchar(30);
Query OK, 4 rows affected (0.04 sec)
Records: 4  Duplicates: 0  Warnings: 0

4.Write a query to find the plant name which required seeds less than 20 which plant on 14-APR

select * from planted where date1>="2012-04-01" and date1<="2012-04-31" and seeds<20;
+---------+------------+------------+------------+-------+
| plantFK | gardenerFK | locationFK | date1      | seeds |
+---------+------------+------------+------------+-------+
|       0 |          1 |          1 | 2012-04-14 |    14 |
|       2 |          2 |          2 | 2012-04-19 |    12 |
+---------+------------+------------+------------+-------+
2 rows in set (0.00 sec)

5.List the amount of sunlight and water to all plants with names that start with letter 'c' or letter 'r'.

select sunlight , water from plant where name like "c%" or name like "r%";
+----------+-------+
| sunlight | water |
+----------+-------+
|     0.26 |  0.82 |
|     0.44 |  0.76 |
|     0.28 |  0.84 |
+----------+-------+
3 rows in set (0.00 sec)

6.Write a valid SQL statement that displays the plant name and the total amount of seed required for each plant that were plant in the garden. The output should be in descending order of plant name.

select p.name, pd.seeds from plant p, planted pd where p.plantid=pd. plantfk order by p.name desc;
+---------+-------+
| name    | seeds |
+---------+-------+
| Tomato  |    38 |
| Radish  |    30 |
| Lettuce |    30 |
| Corn    |    20 |
| Corn    |    12 |
| Carrot  |    14 |
| Carrot  |    28 |
| Beet    |    36 |
+---------+-------+
8 rows in set (0.01 sec)

7.Write a valid SQL statement that calculates the average number of items produced per seed planted for each plant type:( (Average Number of Items = Total Amount Picked / Total Seeds Planted.)

SELECT Plant.Name, AVG(Picked.Amount/Planted.Seeds) AS yield FROM Plant, Planted, Picked WHERE Planted.PlantFK = Picked.PlantFK AND Planted.LocationFK = Picked.LocationFK AND Plant.PlantID=Picked.PlantFK GROUP BY Plant.Name;
+--------+------------+
| Name   | yield      |
+--------+------------+
| Carrot | 0.92855000 |
| Corn   | 2.05000000 |
| Radish | 0.76670000 |
+--------+------------+
3 rows in set (0.00 sec)

8.Write a valid SQL statement that would produce a result set like the following:
 name |  name  |    date    | amount 
------|--------|------------|-------- 
 Tim  | Radish | 2012-07-16 |     23 
 Tim  | Carrot | 2012-08-18 |     28 

SELECT Gardener.Name, Plant.Name, Date1, Amount FROM Picked, Gardener, Plant WHERE Plant.PlantId = Picked.PlantFK
AND Gardener.GardenerId = Picked.GardenerFKAND Picked.GardenerFK = 2 ORDER BY Date1;

9.Find out persons who picked from the same location as he/she planted.



10.Create a view that lists all the plant names picked from all locations except â€™Westâ€™ in the month of August.

select p.name from plant p, picked pd where pd.date1>="2012-08-01" and pd.date1<="2012-08-31" and p.plantid=pd.plantfk and pd.locationfk!=2;
+--------+
| name   |
+--------+
| Carrot |
| Carrot |
| Corn   |
| Tomato |
+--------+
4 rows in set (0.00 sec)

